/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package se.liu.ida.sambo.dto;

import se.liu.ida.sambo.dao.*;
import se.liu.ida.sambo.factory.*;
import se.liu.ida.sambo.exceptions.*;
import java.io.Serializable;
import java.util.*;

public class PredefinedStrategies implements Serializable
{
	/** 
	 * This attribute maps to the column id in the predefinedstrategies table.
	 */
	protected int id;

	/** 
	 * This attribute maps to the column matchers in the predefinedstrategies table.
	 */
	protected String matchers;

	/** 
	 * This attribute maps to the column submatchers in the predefinedstrategies table.
	 */
	protected String submatchers;

	/** 
	 * This attribute maps to the column weights in the predefinedstrategies table.
	 */
	protected String weights;

	/** 
	 * This attribute maps to the column subweights in the predefinedstrategies table.
	 */
	protected String subweights;

	/** 
	 * This attribute maps to the column threshold in the predefinedstrategies table.
	 */
	protected float threshold;

	/**
	 * Method 'PredefinedStrategies'
	 * 
	 */
	public PredefinedStrategies()
	{
	}

	/**
	 * Method 'getId'
	 * 
	 * @return int
	 */
	public int getId()
	{
		return id;
	}

	/**
	 * Method 'setId'
	 * 
	 * @param id
	 */
	public void setId(int id)
	{
		this.id = id;
	}

	/**
	 * Method 'getMatchers'
	 * 
	 * @return String
	 */
	public String getMatchers()
	{
		return matchers;
	}

	/**
	 * Method 'setMatchers'
	 * 
	 * @param matchers
	 */
	public void setMatchers(String matchers)
	{
		this.matchers = matchers;
	}

	/**
	 * Method 'getSubmatchers'
	 * 
	 * @return String
	 */
	public String getSubmatchers()
	{
		return submatchers;
	}

	/**
	 * Method 'setSubmatchers'
	 * 
	 * @param submatchers
	 */
	public void setSubmatchers(String submatchers)
	{
		this.submatchers = submatchers;
	}

	/**
	 * Method 'getWeights'
	 * 
	 * @return String
	 */
	public String getWeights()
	{
		return weights;
	}

	/**
	 * Method 'setWeights'
	 * 
	 * @param weights
	 */
	public void setWeights(String weights)
	{
		this.weights = weights;
	}

	/**
	 * Method 'getSubweights'
	 * 
	 * @return String
	 */
	public String getSubweights()
	{
		return subweights;
	}

	/**
	 * Method 'setSubweights'
	 * 
	 * @param subweights
	 */
	public void setSubweights(String subweights)
	{
		this.subweights = subweights;
	}

	/**
	 * Method 'getThreshold'
	 * 
	 * @return float
	 */
	public float getThreshold()
	{
		return threshold;
	}

	/**
	 * Method 'setThreshold'
	 * 
	 * @param threshold
	 */
	public void setThreshold(float threshold)
	{
		this.threshold = threshold;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof PredefinedStrategies)) {
			return false;
		}
		
		final PredefinedStrategies _cast = (PredefinedStrategies) _other;
		if (id != _cast.id) {
			return false;
		}
		
		if (matchers == null ? _cast.matchers != matchers : !matchers.equals( _cast.matchers )) {
			return false;
		}
		
		if (submatchers == null ? _cast.submatchers != submatchers : !submatchers.equals( _cast.submatchers )) {
			return false;
		}
		
		if (weights == null ? _cast.weights != weights : !weights.equals( _cast.weights )) {
			return false;
		}
		
		if (subweights == null ? _cast.subweights != subweights : !subweights.equals( _cast.subweights )) {
			return false;
		}
		
		if (threshold != _cast.threshold) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		_hashCode = 29 * _hashCode + id;
		if (matchers != null) {
			_hashCode = 29 * _hashCode + matchers.hashCode();
		}
		
		if (submatchers != null) {
			_hashCode = 29 * _hashCode + submatchers.hashCode();
		}
		
		if (weights != null) {
			_hashCode = 29 * _hashCode + weights.hashCode();
		}
		
		if (subweights != null) {
			_hashCode = 29 * _hashCode + subweights.hashCode();
		}
		
		_hashCode = 29 * _hashCode + Float.floatToIntBits(threshold);
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return PredefinedStrategiesPk
	 */
	public PredefinedStrategiesPk createPk()
	{
		return new PredefinedStrategiesPk(id);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "se.liu.ida.sambo.dto.PredefinedStrategies: " );
		ret.append( "id=" + id );
		ret.append( ", matchers=" + matchers );
		ret.append( ", submatchers=" + submatchers );
		ret.append( ", weights=" + weights );
		ret.append( ", subweights=" + subweights );
		ret.append( ", threshold=" + threshold );
		return ret.toString();
	}

}
